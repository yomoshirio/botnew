from aiogram import types
from aiogram.dispatcher import FSMContext
import re 

from loader import vip, bot
from states import ActivatePromo, BuyCheating
from keyboards import inline as menu
from data import User, get_promo, activate_promo, delete_promo
from utils import config, SMMPanelAPI, SMMPanel

@vip.message_handler(state=BuyCheating.count)
async def cheat_link_states(msg: types.Message, state: FSMContext):
    if msg.text.isdigit():
        async with state.proxy() as data:
            service = data['service']
            cheat_type = data['type']
            order = data['order']
        orders = SMMPanel().cheat.get(f'{service}').get(cheat_type)
        order_info = orders.get(order)
        if int(msg.text) >= int(order_info.get('min')) and int(msg.text) <= int(order_info.get('max')):
            async with state.proxy() as data:
                data['count'] = msg.text
            price = float(order_info.get('price')) * int(msg.text)
            text = f"""
<b>üìõ –í–∞–∂–Ω–æ!
–í–≤–æ–¥–∏—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å—Å—ã–ª–∫—É –Ω–∞ –Ω—É–∂–Ω—ã–π –≤–∞–º –≤–∏–¥ —É—Å–ª—É–≥–∏! –ü—Ä–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –≤–≤–æ–¥–µ - —É –≤–∞—Å –ø—Ä–æ–ø–∞–¥–∞—é—Ç –¥–µ–Ω—å–≥–∏!</b>

<b>üíà C–µ—Ä–≤–∏—Å:</b> {SMMPanel().cheat_service_name(service)} {SMMPanel().cheat_type_name(cheat_type)}
<b>üßø –ù–∞–∑–≤–∞–Ω–∏–µ:</b> {order_info.get('name')}
<b>üßø –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:</b> {msg.text}
<b>üí≥ –¶–µ–Ω–∞:</b> {price} RUB
            """
            await msg.answer(text=text)
            await msg.answer(text='<b>üîó <b>–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É:</b></b>')
            await BuyCheating.next()
        else:
            await msg.answer(f'üö´ –ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ!\n–î–æ—Å—Ç—É–ø–Ω–æ: –æ—Ç {order_info.get("min")} –¥–æ {order_info.get("max")}')
            await state.finish()
    else:
        await msg.answer(f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω—É–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å –≤ —á–∏—Å–ª–∞—Ö!')
        await state.finish()

@vip.message_handler(state=BuyCheating.link)
async def cheat_link_states(msg: types.Message, state: FSMContext):
    link = re.search("(?P<url>https?://[^\s]+)", msg.text)
    if link != None:
        link = link.group()
        async with state.proxy() as data:
            data['link'] = link
            service = data['service']
            cheat_type = data['type']
            order = data['order']
            count = data['count']
        
        orders = SMMPanel().cheat.get(f'{service}').get(cheat_type)
        order_info = orders.get(order)
        price = float(order_info.get('price')) * int(count)
        await msg.answer(f'''<b>‚òëÔ∏è –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∑–∞–∫–∞–∑</b> 

<i>üîó –°—Å—ã–ª–∫–∞:</i> <code>{link}</code>
<i>üìå –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:</i> <code>{count}</code>
<i>üí∏ –¶–µ–Ω–∞:</i> <code>{price}</code>‚ÇΩ

<b>–î–ª—è –∑–∞–∫–∞–∑–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ ¬´+¬ª –±–æ—Ç—É!</b>''')
        await BuyCheating.next()
    else:
        await state.finish()
        await msg.answer('<b>‚ùå –≠—Ç–æ –Ω–µ —Å—Å—ã–ª–∫–∞!</b>')

@vip.message_handler(state=BuyCheating.confirm)
async def cheat_confirm(msg: types.Message, state: FSMContext):
    if msg.text.startswith("+"):
        async with state.proxy() as data:
            service = data['service']
            cheat_type = data['type']
            order = data['order']
            count = data['count']
            link = data['link']
        orders = SMMPanel().cheat.get(f'{service}').get(cheat_type)
        order_info = orders.get(order)
        price = float(order_info.get('price')) * int(count)
        if price <= float(User(msg.from_user.id).balance):
            order = await SMMPanelAPI().add_order(service_id=order, link=link, count=count)
            if order != 'no_order':
                await User(msg.from_user.id).update_balance(-price)
                await msg.answer(f"""
<b>‚≠êÔ∏è –í–∞—à –∑–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –Ω–∞—á–∞–ª –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ</b> 

<i>üîß –£—Å–ª—É–≥–∞:</i> <code>{order_info.get('name')}</code>
<i>üìé –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:</i> <code>{count}</code>
<i>üí∏ –¶–µ–Ω–∞ –ø–æ–∫—É–ø–∫–∏:</i> <code>{price}</code>‚ÇΩ
            """, reply_markup=menu.close_markup())
                
                await bot.send_message(chat_id=config.config('admin_group'),
                            text=f"""
<b>‚≠êÔ∏è –ö—É–ø–ª–µ–Ω–∞ –Ω–∞–∫—Ä—É—Ç–∫–∞!

‚óΩÔ∏è C–µ—Ä–≤–∏—Å:</b> <code>{SMMPanel().cheat_service_name(service)} | {SMMPanel().cheat_type_name(cheat_type)}</code>
<b>‚óΩÔ∏è –ù–∞–∑–≤–∞–Ω–∏–µ:</b> <code>{order_info.get('name')}</code>
<b>‚óΩÔ∏è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:</b> <code>{count}</code>
<b>‚óΩÔ∏è –¶–µ–Ω–∞:</b> <code>{price} RUB</code>
<b>‚óΩÔ∏è –ü–æ–∫—É–ø–∞—Ç–µ–ª—å:</b> @{User(msg.from_user.id).username}
<b>‚óΩÔ∏è –°—Å—ã–ª–∫–∞:</b> <code>{link}</code>
                            """, disable_notification=True)
                await SMMPanel().cheat_logs(msg.from_user.id, service, SMMPanel().cheat_service_name(service), 
                        cheat_type, order, order_info.get('name'), link, count, price)
            else:
                await msg.answer('‚ùóÔ∏è <b>T–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–µ–ø–æ–ª–∞–¥–∫–∏, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É</b>\n\n‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω–æ –Ω–∞ —ç—Ç—É —Å—Å—ã–ª–∫—É —É–∂–µ —Å—Ç–æ–∏—Ç –∑–∞–∫–∞–∑ - –Ω—É–∂–Ω–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å')
        else:
            await msg.answer('<b>üí∞ <b>–ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å!</b></b>')
    else:
        await msg.answer('üö´ <b>–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ!</b>')
    await state.finish()


@vip.message_handler(state=ActivatePromo.promo)
async def user_promo(msg: types.Message, state: FSMContext):
    i = await get_promo(msg.text)
    if i != None:
        if int(i[3]) > 0:
            if str(msg.from_user.id) not in i[4].split(','):
                await activate_promo(msg.from_user.id, msg.text)
                await User(msg.from_user.id).update_balance(float(i[2]))

                await msg.answer(f'ü§ë <b>–í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–Ω–æ + {i[2]}‚ÇΩ</b>')
                await bot.send_message(chat_id=config.config('admin_group'),
                                    text=f'<b>üéÅ –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞:</b>\n\n'
                                         f'<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> {msg.from_user.get_mention(as_html=True)} | {msg.from_user.id}\n\n'
                                         f'<b>–ü—Ä–æ–º–æ–∫–æ–¥:</b> {msg.text} | <b>–°—É–º–º–∞:</b> {i[2]} RUB')
            else:
                await msg.answer(f'–í—ã —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ —ç—Ç–æ—Ç –ø—Ä–æ–º–æ–∫–æ–¥')
        else:
            await delete_promo(msg.text)
            await msg.answer(f'üò≠ <b>–ü—Ä–æ–º–æ–∫–æ–¥ –∑–∞–∫–æ–Ω—á–∏–ª—Å—è</b>')
    else:
        await msg.answer(f'üò¨ <b>–ù–µ—Ç —Ç–∞–∫–æ–≥–æ –ø—Ä–æ–º–æ–∫–æ–¥–∞</b>')
    await state.finish()