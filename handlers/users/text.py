from filters.filters import IsBan
from aiogram import types
import re

from loader import bot, vip
from filters import IsPrivate
from data import messages as mes, User
from keyboards import defaut as key, inline as menu
from utils import config, Catalog, BTCPayment, SMMPanelAPI
from handlers.users.start import check_sub

@vip.message_handler(IsPrivate(), IsBan(), text=key.shop_menu_btn[0], state="*")
async def message_three(msg: types.Message):
    if await check_sub(msg):
        photo = 'https://i.imgur.com/kePY9XC.jpg'
        text = f'<b>üí≥ –ë–∞–ª–∞–Ω—Å:</b> {User(msg.from_user.id).balance} RUB'
        await msg.answer_photo(photo=photo, caption=text, reply_markup=menu.menu_markup())
    """
    else:
        await msg.answer('<b>‚ùóÔ∏è–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª</b>', parse_mode='HTML', reply_markup=menu.kbsub)"""

@vip.message_handler(text="üì© Sakura sms")
async def smss(msg: types.Message):
    txt = """<b>üì© –°–∞–º—ã–µ –ª—É—á—à–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ–º–µ—Ä–∞ 

‚óΩÔ∏è–°–º—Å –ø—Ä–∏—Ö–æ–¥—è—Ç –±—ã—Å—Ç—Ä–æ 
‚óΩÔ∏è–ú–Ω–æ–∂–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω 
‚óΩÔ∏è–û–≥—Ä–æ–º–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ—Ä–≤–∏—Å–æ–≤ 
‚óΩÔ∏è–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –ø–µ—Ä–µ–¥–∞—á–∞ –±–∞–ª–∞–Ω—Å–∞ –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ 

üëâ @aaa 
üëâ @aaa 
üëâ @aaa</b>"""
    await msg.answer_photo("https://i.imgur.com/cUKTzb1.jpg", txt)

@vip.message_handler(text="üîì Hyper Store")
async def smmm(msg: types.Message):
    txt = """<b>üîì –ò—â–µ—à—å –≥–¥–µ –∫—É–ø–∏—Ç—å Telegram –∞–∫–∫–∞—É–Ω—Ç? 
</b>
<i>‚Äî –ú—ã –ø—Ä–æ–¥–∞–µ–º —Å–∞–º—ã–µ —Å–≤–µ–∂–∏–µ Telegram –∞–∫–∫–∞—É–Ω—Ç—ã –≤—Å–µ–≥–æ –ø–æ 30‚ÇΩ! –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø–æ–∫—É–ø–∫–∞! </i>

<b>üîó –°—Å—ã–ª–∫–∞: </b><b>@aaa</b>"""
    await msg.answer_photo("https://imgur.com/a/Ftin2Vd.jpg", txt)


@vip.message_handler(IsPrivate(), IsBan(), lambda message: re.search(r'BTC_CHANGE_BOT\?start=', message.text) \
    or re.search(r'Chatex_bot\?start=', message.text) or re.search(r'ETH_CHANGE_BOT\?start=', message.text) or re.search(r'CryptoBot\?start=', message.text)) 
async def crypto_handler(msg: types.Message):
    await msg.answer('<b>‚è≥ –ß–µ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É! –ó–∞–Ω–∏–º–∞–µ—Ç –Ω–µ –±–æ–ª–µ–µ 10 —Å–µ–∫—É–Ω–¥!</b>')
    await BTCPayment().receipt_parser(bot, msg.from_user.id, msg.text)